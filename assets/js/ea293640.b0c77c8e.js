"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1255],{98862:function(t,e,n){n.r(e),n.d(e,{contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return m}});var o=n(83117),i=n(80102),a=(n(67294),n(3905)),s=n(31736),r=["components"],c={id:"attestation-request",title:"Request an Attestation"},l=void 0,d={unversionedId:"develop/sdk/cookbook/claiming/attestation-request",id:"develop/sdk/cookbook/claiming/attestation-request",title:"Request an Attestation",description:"To obtain Credentials, Claimers have to request an Attestation for a set of Claims from an Attester.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/attestation-request",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-request",editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"attestation-request",title:"Request an Attestation"},sidebar:"sdk",previous:{title:"Create a CType",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation"},next:{title:"Attest a Claim (Issue a Credential)",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-creation"}},m=[],u={toc:m};function p(t){var e=t.components,n=(0,i.Z)(t,r);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To obtain Credentials, Claimers have to request an Attestation for a set of Claims from an Attester.\nThe resulting object is a ",(0,a.kt)("inlineCode",{parentName:"p"},"RequestForAttestation"),", which can be created following the snippet below."),(0,a.kt)("p",null,"This process does not involve any interaction with the KILT blockchain, but simply a communication channel where the Claimer and the Attester can communicate."),(0,a.kt)(s.Z,{className:"language-ts",mdxType:"CodeBlock"},"import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function requestAttestation(\n  keystore: Kilt.KeystoreSigner,\n  claimer: Kilt.Did.DidDetails,\n  ctype: Kilt.CType\n): Promise<Kilt.RequestForAttestation> {\n  // The claimer generates the claim they would like to get attested.\n  const claim = Kilt.Claim.fromCTypeAndClaimContents(\n    ctype,\n    {\n      name: 'Alice',\n      age: 29,\n      id: '123456789987654321'\n    },\n    claimer.did\n  )\n  // The attestation request must be signed by the claimer to provide non-repudiation.\n  const requestForAttestation = Kilt.RequestForAttestation.fromClaim(claim)\n  return requestForAttestation.signWithDidKey(\n    keystore,\n    claimer,\n    // The authentication key of the claimer is used to generate the signature.\n    claimer.authenticationKey.id\n  )\n}\n"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The structure of the Claims must respect the schema defined in the specified CType.\nAttesters (and Verifiers) will reject Claims that fail to verify correctly."))))}p.isMDXComponent=!0}}]);