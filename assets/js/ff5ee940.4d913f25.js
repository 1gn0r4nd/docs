"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1517],{91212:function(e,t,o){o.r(t),o.d(t,{assets:function(){return d},contentTitle:function(){return r},default:function(){return c},frontMatter:function(){return s},metadata:function(){return a},toc:function(){return p}});var n=o(83117),i=(o(67294),o(3905)),l=o(90814);const s={id:"howto-integrate-vitejs",title:"ViteJS"},r=void 0,a={unversionedId:"develop/sdk/integrate/howto-integrate-vitejs",id:"develop/sdk/integrate/howto-integrate-vitejs",title:"ViteJS",description:"ViteJS is a great tool to bootstrap your project.",source:"@site/docs/develop/01_sdk/04_integrate/04_vitejs.md",sourceDirName:"develop/01_sdk/04_integrate",slug:"/develop/sdk/integrate/howto-integrate-vitejs",permalink:"/docs/develop/sdk/integrate/howto-integrate-vitejs",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/04_integrate/04_vitejs.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"howto-integrate-vitejs",title:"ViteJS"},sidebar:"sdk",previous:{title:"KILT Distillery",permalink:"/docs/develop/sdk/integrate/howto-integrate-distillery"},next:{title:"Troubleshoot",permalink:"/docs/develop/sdk/troubleshoot-sdk"}},d={},p=[],u={toc:p};function c(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://vitejs.dev/guide/"},"ViteJS")," is a great tool to bootstrap your project.\nAs for all browser based projects, you have to make sure that NodeJS polyfills are in place to make the SDK work in such an environment.\nIf you start from any ViteJS template, you only have to make sure to install and enable those polyfills."),(0,i.kt)("p",null,"Bootstrap using the template of your choice and install KILT + NodeJS polyfills:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn create vite my-app --template react-ts\ncd my-app\nyarn add @kiltprotocol/sdk-js@0.28.2\nyarn add --dev @esbuild-plugins/node-globals-polyfill\nyarn add --dev @esbuild-plugins/node-modules-polyfill\n")),(0,i.kt)("p",null,"Adjust the ",(0,i.kt)("inlineCode",{parentName:"p"},"vite.config.ts")," file to activate the polyfills:"),(0,i.kt)(l.Z,{className:"language-ts",mdxType:"CodeBlock"},"import react from '@vitejs/plugin-react'\nimport rollupNodePolyFill from 'rollup-plugin-node-polyfills'\n\nimport { NodeGlobalsPolyfillPlugin } from '@esbuild-plugins/node-globals-polyfill'\nimport { NodeModulesPolyfillPlugin } from '@esbuild-plugins/node-modules-polyfill'\nimport { defineConfig } from 'vite'\n\nexport default defineConfig({\n  plugins: [react()],\n  optimizeDeps: {\n    esbuildOptions: {\n      plugins: [\n        NodeGlobalsPolyfillPlugin({\n          process: true,\n          buffer: true\n        }),\n        NodeModulesPolyfillPlugin()\n      ]\n    }\n  },\n  build: {\n    rollupOptions: {\n      plugins: [rollupNodePolyFill()]\n    }\n  }\n})\n"),(0,i.kt)("p",null,"After that you can initialize and use the SDK as usual."),(0,i.kt)(l.Z,{className:"language-tsx",mdxType:"CodeBlock"},"import { useEffect, useState } from 'react'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport function App() {\n  const [did, setDid] = useState('')\n  useEffect(() => {\n    const resolveWeb3Name = async () => {\n      await Kilt.init({ address: 'wss://spiritnet.kilt.io' })\n      const did = await Kilt.Did.Web3Names.queryDidForWeb3Name('john_doe')\n      setDid(did || 'unknown')\n    }\n    resolveWeb3Name()\n  })\n\n  return <div className=\"App\">john_doe is {did}</div>\n}\n"))}c.isMDXComponent=!0}}]);