"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[779],{97008:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return l}});var o=n(83117),i=n(80102),a=(n(67294),n(3905)),r=n(31736),s=["components"],c={id:"ctype-creation",title:"Create a CType"},p=void 0,d={unversionedId:"develop/sdk/cookbook/claiming/ctype-creation",id:"develop/sdk/cookbook/claiming/ctype-creation",title:"Create a CType",description:"The creation of a CType in KILT involves two steps: the definition of a CType and the anchoring of its hash on the KILT blockchain.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/01_ctype_creation.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/ctype-creation",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation",editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/01_ctype_creation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"ctype-creation",title:"Create a CType"},sidebar:"sdk",previous:{title:"Unlink an Account from a KILT DID",permalink:"/docs/develop/sdk/cookbook/account_linking/account-unlink"},next:{title:"Request an Attestation",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-request"}},l=[],m={toc:l};function h(e){var t=e.components,n=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The creation of a CType in KILT involves two steps: the definition of a CType and the anchoring of its hash on the KILT blockchain."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The creator of a CType is required to have a full DID with an attestation key.\nTo see how to manage DIDs, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/docs/develop/sdk/cookbook/dids/full-did-update"},"DID section"),"."))),(0,a.kt)("p",null,"The following snippets shows how:"),(0,a.kt)(r.Z,{className:"language-ts",mdxType:"CodeBlock"},"import type { KeyringPair } from '@polkadot/keyring/types'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function createDriversLicenseCType(\n  keystore: Kilt.Did.DemoKeystore,\n  creatorDid: Kilt.Did.FullDidDetails,\n  submitterAccount: KeyringPair,\n  resolveOn: Kilt.SubscriptionPromise.ResultEvaluator = Kilt.BlockchainUtils\n    .IS_FINALIZED\n): Promise<Kilt.CType> {\n  // Create a new CType definition.\n  const ctype = Kilt.CType.fromSchema({\n    $schema: 'http://kilt-protocol.org/draft-01/ctype#',\n    title: `Drivers License by ${creatorDid.did}`,\n    properties: {\n      name: {\n        type: 'string'\n      },\n      age: {\n        type: 'integer'\n      },\n      id: {\n        type: 'string'\n      }\n    },\n    type: 'object'\n  })\n\n  // Generate a creation extrinsic and sign it with the attester's attestation key.\n  const ctypeCreationTx = await ctype\n    .getStoreTx()\n    .then((tx) =>\n      creatorDid.authorizeExtrinsic(tx, keystore, submitterAccount.address)\n    )\n  // Submit the creation extrinsic to the KILT blockchain\n  // using the KILT account specified in the creation operation.\n  await Kilt.BlockchainUtils.signAndSubmitTx(\n    ctypeCreationTx,\n    submitterAccount,\n    { resolveOn }\n  )\n\n  return ctype\n}\n"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The creation of a new CType requires the CType hash to be unique.\nBefore writing a new CType, Attesters should check whether there is already an existing CType which matches their requirements.\nVisit our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/KILTprotocol/ctype-index"},"CType index repository")," for a non-exhaustive list of existing CTypes."))))}h.isMDXComponent=!0}}]);