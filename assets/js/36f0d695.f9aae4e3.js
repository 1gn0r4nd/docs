"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1675],{58837:function(e,o,n){n.r(o),n.d(o,{contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return m}});var t=n(83117),i=n(80102),a=(n(67294),n(3905)),s=n(31736),r=["components"],l={id:"web3name-claim",title:"Claim a web3name"},c=void 0,d={unversionedId:"develop/sdk/cookbook/web3names/web3name-claim",id:"develop/sdk/cookbook/web3names/web3name-claim",title:"Claim a web3name",description:"A web3name can be claimed if it has currently no owner, using the following snippet as reference.",source:"@site/docs/develop/01_sdk/02_cookbook/02_web3names/01_claim.md",sourceDirName:"develop/01_sdk/02_cookbook/02_web3names",slug:"/develop/sdk/cookbook/web3names/web3name-claim",permalink:"/docs/develop/sdk/cookbook/web3names/web3name-claim",editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/02_web3names/01_claim.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"web3name-claim",title:"Claim a web3name"},sidebar:"sdk",previous:{title:"Delete a Full DID",permalink:"/docs/develop/sdk/cookbook/dids/full-did-delete"},next:{title:"Query Public Credentials for a web3name",permalink:"/docs/develop/sdk/cookbook/web3names/credential-query"}},m=[],p={toc:m};function u(e){var o=e.components,n=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,t.Z)({},p,n,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A web3name can be claimed if it has currently no owner, using the following snippet as reference."),(0,a.kt)(s.Z,{className:"language-ts",mdxType:"CodeBlock"},"import type { KeyringPair } from '@polkadot/keyring/types'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function claimWeb3Name(\n  keystore: Kilt.Did.DemoKeystore,\n  did: Kilt.Did.FullDidDetails,\n  submitterAccount: KeyringPair,\n  name: Kilt.Did.Web3Names.Web3Name,\n  resolveOn: Kilt.SubscriptionPromise.ResultEvaluator = Kilt.BlockchainUtils\n    .IS_FINALIZED\n): Promise<void> {\n  const web3NameClaimTx = await Kilt.Did.Web3Names.getClaimTx(name).then((tx) =>\n    did.authorizeExtrinsic(tx, keystore, submitterAccount.address)\n  )\n  await Kilt.BlockchainUtils.signAndSubmitTx(\n    web3NameClaimTx,\n    submitterAccount,\n    {\n      resolveOn\n    }\n  )\n}\n"),(0,a.kt)("p",null,"The claiming process requires the reservation of a deposit that is freed upon web3name release."),(0,a.kt)("p",null,"Once claimed, the web3name will start appearing whenever the DID of its owner is resolved, for instance via the ",(0,a.kt)("a",{parentName:"p",href:"https://dev.uniresolver.io/#did:kilt:4pZGzLSybfMsxB1DcpFNYmnqFv5QihbFb1zuSuuATqjRQv2g"},"Universal Resolver"),".\nFor more information about web3names and DIDs, please refer to the official ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/KILTprotocol/kilt-did-driver/blob/master/docs/did-spec/spec.md"},"KILT DID Specification"),"."))}u.isMDXComponent=!0}}]);