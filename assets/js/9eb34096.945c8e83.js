"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7894],{94273:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return d}});var i=n(83117),o=(n(67294),n(3905)),a=n(90814);const r={id:"presentation-verification",title:"Verify a Credential or a Presentation"},s=void 0,c={unversionedId:"develop/sdk/cookbook/claiming/presentation-verification",id:"develop/sdk/cookbook/claiming/presentation-verification",title:"Verify a Credential or a Presentation",description:"Whether a presentation involves selective disclosure or a whole credential is not technically relevant to Verifiers.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/05_presentation_verification.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/presentation-verification",permalink:"/docs/develop/sdk/cookbook/claiming/presentation-verification",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/05_presentation_verification.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"presentation-verification",title:"Verify a Credential or a Presentation"},sidebar:"sdk",previous:{title:"Present a Credential",permalink:"/docs/develop/sdk/cookbook/claiming/presentation-creation"},next:{title:"Revoke a Credential",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-removal"}},l={},d=[],p={toc:d};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Whether a presentation involves selective disclosure or a whole credential is not technically relevant to Verifiers.\nThis is because in KILT a presentation ",(0,o.kt)("strong",{parentName:"p"},"is")," a credential.\nThis means that the logic for Verifiers does not change depending on the case, thus verifying a presentation is as easy as calling one SDK function, like the following code snippet:"),(0,o.kt)(a.Z,{className:"language-ts",mdxType:"CodeBlock"},"import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function verifyPresentation(\n  presentation: Kilt.Credential,\n  challenge: string | undefined = undefined\n): Promise<boolean> {\n  // Verify the presentation with the provided challenge.\n  return presentation.verify({ challenge })\n}\n"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Verifying a presentation provides proof that all the information is correct and authentic, and that the credential has not been revoked.\nVerifiers still need to match the subject of the credential to the entity that is presenting it.\nOne way of achieving this is by asking the Claimer to include a challenge in the presentation signature, as shown in the snippet above.\nWithout a challenge, Verifiers must implement other measures to be certain about the identity of the presenter.")))}h.isMDXComponent=!0}}]);