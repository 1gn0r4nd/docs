"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1255],{98862:function(t,e,o){o.r(e),o.d(e,{assets:function(){return l},contentTitle:function(){return r},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var n=o(83117),i=(o(67294),o(3905)),a=o(90814);const s={id:"attestation-request",title:"Request an Attestation"},r=void 0,c={unversionedId:"develop/sdk/cookbook/claiming/attestation-request",id:"develop/sdk/cookbook/claiming/attestation-request",title:"Request an Attestation",description:"To obtain Credentials, Claimers have to request an Attestation for a set of Claims from an Attester.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/attestation-request",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-request",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"attestation-request",title:"Request an Attestation"},sidebar:"sdk",previous:{title:"Create a CType",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation"},next:{title:"Attest a Claim (Issue a Credential)",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-creation"}},l={},d=[],u={toc:d};function m(t){let{components:e,...o}=t;return(0,i.kt)("wrapper",(0,n.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To obtain Credentials, Claimers have to request an Attestation for a set of Claims from an Attester.\nThe resulting object is a ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestForAttestation"),", which can be created following the snippet below."),(0,i.kt)("p",null,"This process does not involve any interaction with the KILT blockchain, but simply a communication channel where the Claimer and the Attester can communicate."),(0,i.kt)(a.Z,{className:"language-ts",mdxType:"CodeBlock"},"import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function requestAttestation(\n  keystore: Kilt.KeystoreSigner,\n  claimer: Kilt.Did.DidDetails,\n  ctype: Kilt.CType\n): Promise<Kilt.RequestForAttestation> {\n  // The claimer generates the claim they would like to get attested.\n  const claim = Kilt.Claim.fromCTypeAndClaimContents(\n    ctype,\n    {\n      name: 'Alice',\n      age: 29,\n      id: '123456789987654321'\n    },\n    claimer.uri\n  )\n  // The attestation request must be signed by the claimer to provide non-repudiation.\n  const requestForAttestation = Kilt.RequestForAttestation.fromClaim(claim)\n  return requestForAttestation.signWithDidKey(\n    keystore,\n    claimer,\n    // The authentication key of the claimer is used to generate the signature.\n    claimer.authenticationKey.id\n  )\n}\n"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The structure of the Claims must respect the schema defined in the specified CType.\nAttesters (and Verifiers) will reject Claims that fail to verify correctly.")))}m.isMDXComponent=!0}}]);