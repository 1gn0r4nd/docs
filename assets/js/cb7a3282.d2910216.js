"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[395],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return p}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=u(n),p=r,m=h["".concat(c,".").concat(p)]||h[p]||d[p]||i;return n?a.createElement(m,o(o({ref:t},s),{},{components:n})):a.createElement(m,o({ref:t},s))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return h}});var a=n(3117),r=n(7294),i=n(2389),o=n(9443);var l=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},c=n(6681),u=n(6010),s="tabItem_1uMI";function d(e){var t,n,a,i=e.lazy,o=e.block,d=e.defaultValue,h=e.values,p=e.groupId,m=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=h?h:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),b=(0,c.lx)(v,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=f[0])?void 0:a.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=l(),w=g.tabGroupChoices,y=g.setTabGroupChoices,N=(0,r.useState)(k),x=N[0],T=N[1],O=[],C=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var E=w[p];null!=E&&E!==x&&v.some((function(e){return e.value===E}))&&T(E)}var S=function(e){var t=e.currentTarget,n=O.indexOf(t),a=v[n].value;a!==x&&(C(t),T(a),null!=p&&y(p,a))},I=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=O.indexOf(e.currentTarget)+1;n=O[a]||O[0];break;case"ArrowLeft":var r=O.indexOf(e.currentTarget)-1;n=O[r]||O[O.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":o},m)},v.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,className:(0,u.Z)("tabs__item",s,{"tabs__item--active":x===t}),key:t,ref:function(e){return O.push(e)},onKeyDown:I,onFocus:S,onClick:S},null!=n?n:t)}))),i?(0,r.cloneElement)(f.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function h(e){var t=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},7286:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return h},default:function(){return m}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),o=n(6396),l=n(8215),c=["components"],u={id:"fullnode",title:"How to set up a full node"},s=void 0,d={unversionedId:"chain/fullnode",id:"chain/fullnode",title:"How to set up a full node",description:"We will guide you through the process of setting up and connecting to a full node.",source:"@site/docs/chain/fullnode.md",sourceDirName:"chain",slug:"/chain/fullnode",permalink:"/docs/chain/fullnode",editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/chain/fullnode.md",tags:[],version:"current",frontMatter:{id:"fullnode",title:"How to set up a full node"},sidebar:"chain",previous:{title:"Become a delegator",permalink:"/docs/chain/delegator"}},h=[{value:"Setup",id:"setup",children:[{value:"WASM runtime execution",id:"wasm-runtime-execution",children:[],level:3},{value:"Specify the right chain spec",id:"specify-the-right-chain-spec",children:[],level:3},{value:"Where are all the files stored?",id:"where-are-all-the-files-stored",children:[],level:3}],level:2},{value:"Running a full node",id:"running-a-full-node",children:[{value:"Building the full node",id:"building-the-full-node",children:[],level:3},{value:"An archive node",id:"an-archive-node",children:[],level:3},{value:"An archive node from Docker",id:"an-archive-node-from-docker",children:[],level:3}],level:2},{value:"Sync the blockchain state",id:"sync-the-blockchain-state",children:[],level:2}],p={toc:h};function m(e){var t=e.components,n=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We will guide you through the process of setting up and connecting to a full node.\nIn contrast to a collator, full nodes do not author blocks.\nThey act as a backend for Websites, verify new blocks and validate extrinsics (e.g. coin transfers and other transactions) before they are gossiped to the collator nodes."),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("p",null,"There are currently two different runtimes (i.e., two different parachain environments) that a KILT full node can be part of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"peregrine: the public test network whose runtime is as close to the official chain as possible. It can be used to try stuff out before executing them on the live chain, which involves spending tokens that have real monetary value."),(0,i.kt)("li",{parentName:"ul"},"spiritnet: the official public network, which contains only stable features.")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The remainder of the guide explaining how to run a full node is for the official spiritnet.\nNevertheless, we recommend to try out the setup on our peregrine testnet first.\nHence, at each step where it is applicable, we indicate what differs between the peregrine and spiritnet configuration for the full node to join either network."))),(0,i.kt)("h3",{id:"wasm-runtime-execution"},"WASM runtime execution"),(0,i.kt)("p",null,"A KILT full node should use the ",(0,i.kt)("inlineCode",{parentName:"p"},"--execution=wasm")," parameter for both the relaychain and parachain collation.\nThe alternative to WASM runtime execution is native runtime execution, which might be faster but can, in some cases, deviate from the WASM execution logic and result in a different state.\nWhen this happens the full node will crash and will stop synchronizing with the network.\nSince the WASM runtime logic is part of the blockchain state itself and hence represents the single source of truth, all nodes should execute the WASM version of the runtime logic."),(0,i.kt)("h3",{id:"specify-the-right-chain-spec"},"Specify the right chain spec"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"--chain")," parameter decides which blockchain the KILT full node will join.\nThis parameter must be specified for both the parachain and the relaychain, since both chains are, as a matter of fact, separate blockchains.\nThe KILT parachain accepts an additional parameter to select the environment to use for the WASM runtime execution.\nThis can either be ",(0,i.kt)("inlineCode",{parentName:"p"},"peregrine")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"spiritnet"),"."),(0,i.kt)("p",null,"Hence, to start a full node for the spiritnet network, the parameter would be ",(0,i.kt)("inlineCode",{parentName:"p"},"--chain=spiritnet"),", while for peregrine would be ",(0,i.kt)("inlineCode",{parentName:"p"},"--chain=peregrine"),"."),(0,i.kt)("h3",{id:"where-are-all-the-files-stored"},"Where are all the files stored?"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"--base-path")," parameter specifies where all the persistent files must be stored.\nBy default the session keys will also be stored in the ",(0,i.kt)("em",{parentName:"p"},"base path"),", but we recommend to separate them from the other files.\nThis makes sure that the keyfiles are not accidentally lost or published when the blockchain database is backed up or restored."),(0,i.kt)("h2",{id:"running-a-full-node"},"Running a full node"),(0,i.kt)(o.Z,{groupId:"exec-strategy",defaultValue:"Binary",values:[{label:"Binary",value:"Binary"},{label:"Docker",value:"Docker"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"Binary",mdxType:"TabItem"},(0,i.kt)("h3",{id:"building-the-full-node"},"Building the full node"),(0,i.kt)("p",null,"Below is the command to build the KILT full node executable.\nThe command must be run from the root directory of the repository after it has been cloned."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Set up the build environment by installing the Rust compiler.\n./scripts/init.sh\n# Build the executable from source enabling all the optimisations with --release.\ncargo build --release -p kilt-parachain\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"We discourage to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," branch to build the executable. Instead, the latest commit from ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," should be used."))),(0,i.kt)("h3",{id:"an-archive-node"},"An archive node"),(0,i.kt)("p",null,"The compiled executable can be found in ",(0,i.kt)("inlineCode",{parentName:"p"},"./target/release/kilt-parachain")," after the build process completes successfully. To run an Archive full node add the option ",(0,i.kt)("inlineCode",{parentName:"p"},"--pruning archive")," to the command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'./target/release/kilt-parachain \\\n  --chain={spiritnet, peregrine} \\\n  --runtime={spiritnet, peregrine} \\\n  --rpc-port=9933 \\\n  --rpc-cors=all \\\n  --rpc-external \\\n  --ws-external \\\n  --name="name of full node" \\\n  --execution=wasm \\\n  --pruning archive \\\n  --state-cache-size=1 \\\n  -- \\\n  --chain=kusama \\\n  --execution=wasm\n'))),(0,i.kt)(l.Z,{value:"Docker",mdxType:"TabItem"},(0,i.kt)("h3",{id:"an-archive-node-from-docker"},"An archive node from Docker"),(0,i.kt)("p",null,"The full node can also be started inside a container.\nTo expose the websockets please ensure to enable the following options ",(0,i.kt)("inlineCode",{parentName:"p"},"--rpc-external")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--ws-external"),"."),(0,i.kt)("p",null,"To run an Archive full node add the option ",(0,i.kt)("inlineCode",{parentName:"p"},"--pruning archive")," to the command."),(0,i.kt)("p",null,"First, you can fetch the pre-built image:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull kiltprotocol/kilt-node:latest\n")),(0,i.kt)("p",null,"Once you have the image, you can spin up the container.\nMake sure to choose whether you want to start a full node for peregrine or spiritnet by selected the correct runtime and chain."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'docker run data:/data kiltprotocol/kilt-node:latest \\\n  --base-path=/data/para\n  --chain={spiritnet, peregrine} \\\n  --runtime={spiritnet, peregrine} \\\n  --rpc-port=9933 \\\n  --rpc-cors=all \\\n  --rpc-external \\\n  --ws-external \\\n  --name="name of full node" \\\n  --execution=wasm \\\n  --pruning archive \\\n  --state-cache-size=1 \\\n  -- \\\n  --base-path=/data/relay \\\n  --chain=kusama \\\n  --execution=wasm\n')))),(0,i.kt)("h2",{id:"sync-the-blockchain-state"},"Sync the blockchain state"),(0,i.kt)("p",null,"The node needs to fully sync up with both the parachain and the relaychain.\nDepending on the size of the blockchain state and your hardware, it may take a number of hours to few days for the node to catch up.\nMore details can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.polkadot.network/docs/maintain-guides-how-to-validate-kusama#synchronize-chain-data"},"Polkadot network documentation"),"."))}m.isMDXComponent=!0}}]);