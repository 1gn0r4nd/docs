"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9353],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},33290:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var n=r(83117),o=r(80102),a=(r(67294),r(3905)),l=["components"],i={id:"claimer",title:"\ud83d\udc64 Claimer"},c=void 0,s={unversionedId:"develop/workshop/claimer/claimer",id:"develop/workshop/claimer/claimer",title:"\ud83d\udc64 Claimer",description:"In this section you will walk though all processes done by the Claimer.",source:"@site/docs/develop/03_workshop/05_claimer/index.md",sourceDirName:"develop/03_workshop/05_claimer",slug:"/develop/workshop/claimer/",permalink:"/docs/develop/workshop/claimer/",editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/03_workshop/05_claimer/index.md",tags:[],version:"current",frontMatter:{id:"claimer",title:"\ud83d\udc64 Claimer"},sidebar:"workshop",previous:{title:"CType",permalink:"/docs/develop/workshop/attester/ctype"},next:{title:"DID",permalink:"/docs/develop/workshop/claimer/did"}},p=[{value:"Folder Structure",id:"folder-structure",children:[],level:2}],u={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this section you will walk though all processes done by the ",(0,a.kt)("span",{className:"label-role claimer"},"Claimer"),"."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"First step is to ",(0,a.kt)("a",{parentName:"li",href:"./did"},"create a DID")," which is the identity that is used to interact with ",(0,a.kt)("span",{className:"label-role attester"},"Attesters")," and ",(0,a.kt)("span",{className:"label-role verifier"},"Verifiers"),"."),(0,a.kt)("li",{parentName:"ol"},"Next we will create a claim, request a Credential and present it to a ",(0,a.kt)("span",{className:"label-role verifier"},"Verifier"))),(0,a.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,a.kt)("p",null,"Create the following files in the ",(0,a.kt)("span",{className:"label-role claimer"},"Claimer")," folder.\nThis folders serves to mimic a ",(0,a.kt)("span",{className:"label-role claimer"},"Claimer"),"'s perspective."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u2514\u2500 kilt-rocks/ # project\n  \u2514\u2500 claimer/ # all claimer code\n    \u251c\u2500 createClaim.ts # creates a claim\n    \u251c\u2500 createPresentation.ts # creates a presentation for verifiers\n    \u251c\u2500 generateKeypairs.ts # create keypairs for the light DID\n    \u251c\u2500 generateLightDid.ts # create the light DID for the claimer\n    \u2514\u2500 generateRequest.ts # create the request for attestation that is sent to the attester\n")))}m.isMDXComponent=!0}}]);